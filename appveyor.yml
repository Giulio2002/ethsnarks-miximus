os: Visual Studio 2015

# Boost is already installed on AppVeyor.
environment:
  matrix:
   - COMPILER: msys64
     MINGW_ARCH: x86_64
     MINGW_ROOT: C:\msys64\mingw64
     BOOST_ROOT: C:\msys64\mingw64
     BOOST_LIBRARYDIR: C:\msys64\mingw64\lib
     BOOST_INCLUDEDIR: C:\msys64\mingw64\include\boost
     #CMAKE_GENERATOR: 'Ninja'
     CMAKE_GENERATOR: 'MSYS Makefiles'
   #- COMPILER: MinGW
   #  CMAKE_GENERATOR: 'MinGW Makefiles'
   #  BOOST_ROOT: C:\Libraries\boost_1_67_0
   #- COMPILER: msvc15
   #  MSVC_ARCH: x64
   #  BOOST_ROOT: C:\Libraries\boost_1_67_0
   #  BOOST_LIBRARYDIR: C:\Libraries\boost_1_67_0\lib64-msvc-14.0
   #  CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"

install:
  # Use cygwin to checkout source code, due to characters in sub-repo that mingw git can't handle
  - set OLD_PATH=%PATH%
  - set PATH=%PATH%;C:\cygwin\bin
  - C:\cygwin\bin\git submodule update --init --recursive
  - set PATH=%OLD_PATH%
  # Then perform setup for dependencies
  - set PATH=%BOOST_LIBRARYDIR%;%PATH%
  - if "%CMAKE_GENERATOR%" equ "Ninja" (choco install ninja)
  - if defined MINGW_ROOT set PATH=%MINGW_ROOT%\bin;C:\msys64\usr\bin\;%PATH%
  - if defined MINGW_ARCH bash -lc "pacman --needed --noconfirm -S mingw-w64-%MINGW_ARCH%-boost mingw-w64-%MINGW_ARCH%-gmp"
  - if defined MSVC_ARCH call "%VS140COMNTOOLS%\..\..\VC\vcvarsall.bat" %MSVC_ARCH%
  - if [%COMPILER%]==[MinGW] mingw-get install mingw32-gmp

before_build:
  # Rename sh.exe as sh.exe in PATH interferes with MinGW
  - if [%COMPILER%]==[MinGW] rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
  - cmake -E make_directory build
  - cmake -E chdir build cmake -G "%CMAKE_GENERATOR%" -DOPENSSL_ROOT_DIR=C:\OpenSSL-Win64 -DOPENSSL_LIBRARIES=C:\OpenSSL-Win64\lib -DOPENSSL_INCLUDE_DIR=C:\OpenSSL-Win64\include ..\circuit\

build_script:
  - cmake --build build 

# Tests are currently horribly broken, as with a lot of libsnark etc.
#test_script:
#  - set CTEST_OUTPUT_ON_FAILURE=ON
#  - cmake --build build --target test
